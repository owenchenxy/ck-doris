apiVersion: v1
data:
  relay: |
    exporters:
      clickhouse:
        endpoint: "tcp://chi-mych-mycluster-0-0.clickhouse:9000,chi-mych-mycluster-1-0.clickhouse:9000,chi-mych-mycluster-0-1.clickhouse:9000,chi-mych-mycluster-1-1.clickhouse:9000"
        username: default
        password: password
        async_insert: true
        ttl: 12h
        compress: lz4
        create_schema: true
        timeout: 5s
        cluster_name: mycluster
        logs_table_name: otel_logs_distributed
        table_engine:
          name: ReplicatedMergeTree
          params: "'/clickhouse/tables/{shard}/otel_logs', '{replica}'"
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
      debug: {}
      kafka:
        auth:
          sasl:
            mechanism: PLAIN
            password: mrzmiJCotG
            username: user1
        brokers:
        - kafka.default:9092
        encoding: otlp_json
        partition_traces_by_id: true
        producer:
          max_message_bytes: 20485880
        protocol_version: 2.0.0
      logging:
        verbosity: detailed
      otlphttp:
        retry_on_failure:
          enabled: true
        tls:
          insecure: true
        traces_endpoint: http://deepflow-agent.deepflow/api/v1/otel/trace
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    processors:
      batch:
        send_batch_size: 1000
        timeout: 10s
      k8sattributes:
        extract:
          labels:
          - from: pod
            key: app
            tag_name: k8s.pod.labels.app
          metadata:
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: connection
      memory_limiter:
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30
      resource:
        attributes:
        - action: insert
          from_attribute: k8s.pod.ip
          key: app.host.ip
      resourcedetection/env:
        detectors:
        - env
        - system
        override: false
        timeout: 2s
    receivers:
      filelog:
        exclude:
        - /var/log/pods/open-telemetry_otel-agent*_*/opentelemetry-collector/*.log
        include:
        - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
        - id: container-parser
          max_log_size: 102400
          type: container
        retry_on_failure:
          enabled: true
        start_at: end
      fluentforward:
        endpoint: 0.0.0.0:8006
      hostmetrics:
        collection_interval: 30s
        root_path: /hostfs
        scrapers:
          cpu: null
          disk: null
          filesystem: null
          load: null
          memory: null
          network: null
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 30s
        endpoint: ${env:K8S_NODE_NAME}:10250
        insecure_skip_verify: true
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${env:MY_POD_IP}:8888
    service:
      extensions:
      - health_check
      pipelines:
        logs:
          exporters:
          - kafka
          - clickhouse
          processors:
          - k8sattributes
          - batch
          - memory_limiter
          receivers:
          - filelog
        metrics:
          exporters:
          - kafka
          processors:
          - k8sattributes
          - batch
          - memory_limiter
          - resourcedetection/env
          receivers:
          - hostmetrics
          - kubeletstats
        traces:
          exporters:
          - kafka
          processors:
          - k8sattributes
          - batch
          - memory_limiter
          receivers:
          - otlp
      telemetry:
        logs:
          level: debug
        metrics:
          address: ${env:MY_POD_IP}:8888
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: otel-agent-daemonset
    meta.helm.sh/release-namespace: open-telemetry
  creationTimestamp: "2024-05-08T02:27:34Z"
  labels:
    app.kubernetes.io/instance: otel-agent-daemonset
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/version: 0.107.0
    helm.sh/chart: opentelemetry-collector-0.102.1
  name: otel-agent-agent
  namespace: open-telemetry
