extraEnvs:
  - name: NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: OTEL_RESOURCE_ATTRIBUTES
    value: "host.name=$(NODE_NAME)"
image:
  repository: otel/opentelemetry-collector-contrib
mode: daemonset
presets:
  logsCollection:
    enabled: true
fullnameOverride: otel-agent
service:
  enabled: true
# ports:  
#   fluentforward:
#     enabled: true
#     containerPort: 8006
#     servicePort: 8006
#     hostPort: 8006
#     protocol: TCP
resources:
  limits:
    cpu: 250m
    memory: 1024Mi
config:
    receivers:
      jaeger: null
      zipkin: null
      otlp: 
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 90
        spike_limit_percentage: 10
      batch:
        send_batch_size: 1000
        timeout: 10s
      resource:
        attributes:
          - key: app.host.ip
            from_attribute: k8s.pod.ip
            action: insert
      k8sattributes:
        extract:
          metadata:                                                                                                                                                     
            - k8s.namespace.name                                                                                                                                          
            - k8s.deployment.name                                                                                                                                         
            - k8s.statefulset.name                                                                                                                                        
            - k8s.daemonset.name                                                                                                                                          
            - k8s.cronjob.name                                                                                                                                            
            - k8s.job.name                                                                                                                                                
            - k8s.node.name                                                                                                                                               
            - k8s.pod.name   
            - k8s.pod.uid                                                                                                                                                 
            - k8s.pod.start_time
      resourcedetection/env:
        detectors: [ env, system ]
        timeout: 2s
        override: false
    exporters:
      doris:
        endpoint: http://doriscluster-sample-fe-service.default:8030
        database: otel
        username: root
        password: ""
        table:
          logs: otel_logs
          traces: otel_traces
          metrics: otel_metrics
        create_schema: true
        mysql_endpoint: doriscluster-sample-fe-service:9030
        history_days: 0
        create_history_days: 0
        replication_num: 1
        timezone: Asia/Shanghai
        timeout: 15s
        sending_queue:
          enabled: true
          num_consumers: 10
          queue_size: 1000
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
    extensions:
      # The health_check extension is mandatory for this chart.
      # Without the health_check extension the collector will fail the readiness and liveliness probes.
      # The health_check extension can be modified, but should never be removed.
      health_check: {}

    service:
      pipelines:
        logs: 
          receivers: [  ]
          processors: [ batch, memory_limiter ]
          exporters: [ doris ]
      extensions:
        - health_check
      telemetry:
        logs:
          level: "debug"
